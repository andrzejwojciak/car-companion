@page "/cars"
@using CarCompanion.Shared.Contract.V1.Responses.Car
@using CarCompanion.Shared.Results
@using CarCompanion.UI.Services.Interfaces

@inject HttpClient Http
@inject IAuthService AuthService
@inject ICarService CarService
@inject NavigationManager NavigationManager
@inject ILocalStorageService LocalStorageService


<h3 class="w-100 p-2" style="text-align: center;">
    Your cars:
</h3>

@if (result == null)
{
    <div class="spinner-border text-primary" role="status">
        <span class="sr-only">Loading...</span>
    </div>
}
else
{
    @if (result.Success)
    {
        <div class="d-flex flex-wrap flex-row justify-content-center">
            
            @foreach (var car in result.Data.Cars)
            {
                <div class="card p-1 m-2" style="width: 18rem;">
                    <img class="card-img-top" src="https://bi.im-g.pl/im/60/c8/17/z24937568Q,Opel-Corsa-2020.jpg" alt="Card image cap">
                    <div class="card-body">
                        <h5 class="card-title">@car.MainName</h5>
                        
                        <p class="card-text">@car.Brand @car.Brand @car.Generation</p>
                        
                        <a href="cars/@car.CarId" class="btn btn-primary">More info</a>
                    </div>
                </div>
            }

        </div>
    }
    else
    {
        <a>Something went wrong and you can't get a cars</a>
    }
}

@code {

    private ServiceResult<GetUserCarsResponse> result;

    protected override async Task OnInitializedAsync()
    {
        if (!await AuthService.IsAuthorizedAsync())
        {
            NavigationManager.NavigateTo("Login");
        }

        result = await CarService.GetUserCarsAsync();
    }

}