@page "/cars/{CarId}"
@using CarCompanion.Shared.Contract.V1.Responses.Car
@using CarCompanion.Shared.Results
@using CarCompanion.UI.Services.Interfaces

@inject NavigationManager NavigationManager
@inject IAuthService AuthService
@inject ICarService CarService

<h3>
    Your car info:
</h3>

@if (result == null)
{
    <div class="spinner-border text-primary" role="status">
        <span class="sr-only">Loading...</span>
    </div>
}
else
{
    @if (result.Success)
    {
        <table class="table">
             <thead>
             <tr>
                 <td>MainName</td>
                 <td>Brand</td>
                 <td>Model</td>
                 <td>Generation</td>
                 <td>Plate</td>
                 <td>Mileage</td>
                 <td>ProductionYear</td>
             </tr>
             </thead>
             <tbody>
             <tr>
                 <td>@result.Data.MainName</td>
                 <td>@result.Data.Brand</td>
                 <td>@result.Data.Model</td>
                 <td>@result.Data.Generation</td>
                 <td>@result.Data.Plate</td>
                 <td>@result.Data.Mileage</td>
                 <td>@result.Data.ProductionYear</td>
             </tr>
             </tbody>
        </table>
    }
    else
    {
        <p>You might not have access to this resource</p>
    }
}


@code {

    [Parameter]
    public string CarId { get; set; }

    private ServiceResult<GetCarByIdResponse> result;

    protected override async Task OnInitializedAsync()
    {
        if (!await AuthService.IsAuthorizedAsync())
        {
            NavigationManager.NavigateTo("Login");
        }

        result = await CarService.GetCarByIdAsync(CarId);
    }

}