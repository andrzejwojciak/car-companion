@page "/cars"
@using CarCompanion.Shared.Contract.V1.Responses.Car
@using CarCompanion.Shared.Results
@using CarCompanion.UI.Services.Interfaces
@using CarCompanion.UI.Components.UI

@inject HttpClient Http
@inject IAuthService AuthService
@inject ICarService CarService
@inject NavigationManager NavigationManager
@inject ILocalStorageService LocalStorageService


<h3 class="w-100 m-2" style="text-align: center;">
    Your cars:
</h3>

@if (result == null)
{
    <LoadingSpinner />
}
else
{
    @if (result.Success)
    {
        <div class="d-flex flex-wrap flex-row justify-content-center">

            <CardDeck>

                @foreach (var car in result.Data.Cars)
                {
                    <Card Style="width: 18rem">
                        <CardImage Source="https://www.wyborkierowcow.pl/wp-content/uploads/2020/08/Alfa-Romeo-Giulia-2020-1024x535.jpg" Alt="Car image">
                        </CardImage>
                        <CardBody>
                            <CardTitle Size="5">@car.MainName</CardTitle>
                            <CardText>
                                @car.Brand @car.Model @car.Generation
                            </CardText>
                            <hr>
                            <a class="btn btn-primary" href="cars/@car.CarId" role="button">More info</a>
                        </CardBody>
                    </Card>
                }

                <Card Style="width: 18rem; padding: 0">
                    <CardBody Style="padding: 0;">
                        <a href="cars/create" class="btn btn-outline-dark w-100 h-100 d-flex justify-content-center align-items-center" style="background: rgb(159,203,213); background: linear-gradient(180deg, rgba(159,203,213,1) 0%, rgba(209,189,120,1) 100%);">
                            <div class="d-flex flex-column">
                                <h3>
                                    <i class="fas fa-plus"></i>
                                </h3>
                                <h4>
                                    Add new car
                                </h4>
                            </div>
                        </a>
                    </CardBody>
                </Card>

            </CardDeck>

        </div>
    }
    else
    {
        <a>Something went wrong and you can't get a cars</a>
    }
}

@code {
    private ServiceResult<GetUserCarsResponse> result;

    protected override async Task OnInitializedAsync()
    {
        if (!await AuthService.IsAuthorizedAsync())
        {
            NavigationManager.NavigateTo("Login");
        }

        result = await CarService.GetUserCarsAsync();
    }

}