@page "/cars/{CarId}"
@using CarCompanion.Shared.Contract.V1.Responses.Car
@using CarCompanion.UI.Services.Interfaces

@inject HttpClient Http
@inject IAuthService AuthService
@inject NavigationManager NavigationManager
@inject ILocalStorageService LocalStorageService

<h3>
    Your car info:
</h3>

@if (_response == null)
{
    <p><em>Loading...</em></p>
}
else
{
    @if (_response.IsSuccessStatusCode)
    {
        <table class="table">
             <thead>
             <tr>
                 <td>MainName</td>
                 <td>Brand</td>
                 <td>Model</td>
                 <td>Generation</td>
                 <td>Plate</td>
                 <td>Mileage</td>
                 <td>ProductionYear</td>
             </tr>
             </thead>
             <tbody>
             <tr>
                 <td>@_getCarByIdResponse.MainName</td>
                 <td>@_getCarByIdResponse.Brand</td>
                 <td>@_getCarByIdResponse.Model</td>
                 <td>@_getCarByIdResponse.Generation</td>
                 <td>@_getCarByIdResponse.Plate</td>
                 <td>@_getCarByIdResponse.Mileage</td>
                 <td>@_getCarByIdResponse.ProductionYear</td>
             </tr>
             </tbody>
        </table>
    }
    else
    {
        <p>You might not have access to this resource</p>
    }
}


@code {

    [Parameter]
    public string CarId { get; set; }

    private HttpResponseMessage _response;
    private GetCarByIdResponse _getCarByIdResponse;


    protected override async Task OnInitializedAsync()
    {
        if (!await AuthService.IsAuthorizedAsync())
        {
            NavigationManager.NavigateTo("Login");
        }
        
        var url = "http://localhost:8080/api/v1/cars/" + CarId;
        
        var accessToken = await LocalStorageService.GetItem<string>("accessToken");

        var httpRequestMessage = new HttpRequestMessage
        {
            Method = HttpMethod.Get,
            RequestUri = new Uri(url),
            Headers =
            {
                {"Authorization", $"Bearer {accessToken}"},
                {"Accept", "application/json"}
            }
        };

        _response = await Http.SendAsync(httpRequestMessage);

        if (_response.IsSuccessStatusCode)
        {
            _getCarByIdResponse = await _response.Content.ReadFromJsonAsync<GetCarByIdResponse>();
        }
    }

}